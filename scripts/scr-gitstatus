#!/bin/bash

mygit() {
	cd ~/Workspace/repos
	local onbranch=""
	local isupdated=""
	# each of the folders here is a git directory
	# enter each directory and check the git status.
	# If the status is not clean, print the directory name and the status.
	clear
	for dir in *; do
		if [ -d "$dir" ]; then
			cd "$dir" 2>/dev/null
      # if .git folder is found and .is-ignore is not found
      if [ -d .git ] && [ ! -f .is-ignore ]; then
				# This is a git dir. We need to ...
				# 1. check if there are any changes.
				# 2. Check if we are on the main branch an if not print the repo and branch name
				# 3. If working tree is clean, try to fetch and pull current branch

				printf '\033[0;34m%-20s\033[0m > %s\n' "${dir}" "$(git status | grep 'On branch' | sed 's/On branch //')"
				# 1. check if there are any changes.
				if [ -z "$(git status | grep 'nothing to commit')" ]; then
					echo ""
					git status | grep 'On branch'
					if [ -f MYGIT_TODO.org ]; then
						echo "    --- todo list ---"
						cat MYGIT_TODO.org | while read line; do
							echo "    $line"
						done
					fi
					git status |
						grep -v 'On branch' |
						grep -v 'use "git'
				fi

				# 3. Pull clean branches
				if [ -n "$(git status | grep 'working tree clean')" ]; then
					res="$(git pull)"
					if [ -z "echo $res | grep Already up to date" ]; then
						printf '\033[0;34m%-20s\033[0m > %s\n' "${dir}" "Updated"
					fi
				fi
			fi
			cd ..
		fi
	done
}

hh() {
	# print in yellow the line passed by user
	echo -e "\e[33m$@\e[0m"
}
