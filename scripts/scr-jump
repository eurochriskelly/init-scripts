#!/bin/bash
# Jump to a folder quickly
#

rc_file="$HOME/.jump.rc"
log_file="$HOME/.jump.log"
touch "$rc_file" "$log_file"

jump() {
	local jump_list=()
	local choice
	local search_str="$1"  # Capture the first argument as the search string

	sort "$log_file" | head -n 1000 | awk '{print $2}' | sort | uniq -c | sort -nr | awk '{print $2}' > "$rc_file"

	if [[ -f "$rc_file" ]]; then
		echo -e "\033[33mChoose folder to jump to:\033[0m"
		while IFS= read -r line; do
			if [ -z "$line" ]; then
				continue
			fi

			# Check if search string is provided and match the line with the search string
			if [ -n "$search_str" ]; then
				if [[ "$line" == *"$search_str"* ]]; then
					jump_list+=("$line")
				fi
			else
				jump_list+=("$line")
			fi
		done < "$rc_file"

		if [[ ${#jump_list[@]} -eq 0 ]]; then
			echo "No jump paths found matching '$search_str'"
			return
		fi

		for ((i = 0; i < ${#jump_list[@]}; i++)); do
			item="${jump_list[i]}"
			if [[ $item == *"$HOME"* ]]; then
				item="${item//"$HOME"/\~}"
			fi
			echo "$((i + 1)). $item"
		done

		local prompt="Enter jump \033[33m#\033[0m \033[34m[\033[0m\033[33mEdit\033[0m\033[34m|\033[0m\033[33mAdd\033[0m\033[34m):\033[0m "
		echo -e "$prompt"
		read -r choice

		case "$choice" in
			e)
				echo "EDITOR: $EDITOR"
				eval "$EDITOR $rc_file"
				;;
			a)
				addVisit
				;;
			x)
				return
				;;
			*)
				if [[ $choice =~ ^[0-9]+$ ]] && (( choice > 0 && choice <= ${#jump_list[@]} )); then
					local selected_path="${jump_list[$((choice - 1))]}"
					cd "$selected_path" || return
					addVisit
					echo "Navigated to: $selected_path"
				else
					echo "Invalid choice. Please enter a valid number."
				fi
				;;
		esac
	else
		echo "File $rc_file not found"
	fi
}

addVisit() {
	echo "$(date +%Y-%m-%dT%H:%M:%S) $(pwd)" >> "$log_file"
}
